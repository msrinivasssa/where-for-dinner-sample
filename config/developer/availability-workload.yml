apiVersion: carto.run/v1alpha1
kind: Workload
metadata:
  name: where-for-dinner-availability
  namespace: my-apps
  labels:
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/part-of: where-for-dinner-availability
    networking.knative.dev/visibility: cluster-local
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apis.apps.tanzu.vmware.com/register-api: "true"
spec:
  build:
    env:
    - name: BP_JVM_VERSION
      value: "17"
  env:
  - name: spring_profiles_active
    value: secure,mysql,rabbitmq
  params:
  - name: annotations
    value:
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "200"
      autoscaling.knative.dev/maxScale: "4"
  - name: api_descriptor
    value:
      type: openapi
      location:
        path: /v3/api-docs
      system: where-for-dinner
      owner: where-for-dinner-team
      description: Core Where For Dinner service for retrieving dining availability
  serviceClaims:
  - name: sso
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      name: appsso-where-for-dinner
  - name: rmq
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      name: msgbroker-where-for-dinner
  - name: db
    ref:
      apiVersion: services.apps.tanzu.vmware.com/v1alpha1
      kind: ClassClaim
      name: db-where-for-dinner
  resources:
    requests:
      memory: 500M
      cpu: 100m
    limits:
      memory: 750M
      cpu: "1.5"
  source:
    git:
      url: https://github.com/msrinivasssa/where-for-dinner-sample.git
      ref:
        branch: main
    subPath: where-for-dinner-availability

